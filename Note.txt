我的笔记
1、初始化仓库git init
2、添加文件到GIT仓库
    git add <file>--提交到暂存区
    git commit -m "xxx"--提交到分支
3、git status --随时掌握工作区的状态
4、git diff--git status告诉你有文件被修改过，可以使用git diff查看修改内容
5、HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。(回退到上一个版本git reset --hard HEAD^)
6、用git log可以查看提交历史，以便确定要回退到哪个版本。如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数
7、要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本
8、 第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
    第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支
9、Git是如何跟踪修改的，每次修改，如果不用git add到暂存区，那就不会加入到commit中
10、场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git restore -- file
    场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，
    第一步用命令git restore --staged <file>，就回到了场景1，第二步按场景1操作。
    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库
11、命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

GitHub
本地Git仓库和GitHub仓库之间的传输是通过SSH加密的
第1步：创建SSH Key。在用户主目录(C盘/用户/asus/)下，看看有没有.ssh目录
打开Shell（Windows下打开Git Bash），创建SSH Key：
$ ssh-keygen -t rsa -C "youremail@example.com"
可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，
这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥,可以放心地告诉任何人
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：
然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容

要关联一个远程库，使用命令 git remote add origin git@github.com:dapao662/mygitrepositores.git
关联后，使用命令git push -u origin master第一次推送master分支的所有内容
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改
分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，
也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！
当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！

从远程库克隆
要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。
$ git clone git@github.com:dapao662/gitskills.git
Git支持多种协议，包括https，但ssh协议速度最快。
